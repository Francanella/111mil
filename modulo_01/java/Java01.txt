/*
	Java01.txt
	Ejercicios de referencia 
	para aprender Java
*/


--------------------------------------------
/*
	Hola
	Primer programa en java
*/
class Ejemplo{
	public static void main(String[] args){
		System.out.println("Hola, mundo!");
	}
}









--------------------------------------------
Comentarios
	Son textos que se encuentran delimitados por
	caracteres con un significado especial los 
	cuales son ignorados por el compilador.
		/*
			Este es un comentario
			Puede tener varias líneas
		*/

		// Comentarios de una línea

class Ejemplo
	Mayúscula inicial para el nombre
	VariasPalabras (con iniciales en mayúsculas)


llaves
	Sirven para delimitar un bloque de código

punto y coma
	Sirve para indicar el final de la sentencia o
	instrucción

public static void main(String args[])
	Método main
		Un método es un bloque de código con un nombre
		y algunos especificadores o modificadores que
		permite ejecutar una parte de un programa.
		El método main, en particular, es el método que
		busca la máquina virtual de java al ejecutar una
		aplicación.  Es decir, por ejemplo, que, si 
		ingresamos:

		java Clase <enter>

		La máquina virtual de java va a buscar en la clase
		Clase un método llamado main con la firma:

		public static void main(String[] args)


System.out.println
	Es un método estático (de la clase System) que permite
	visualizar en pantalla una expresión.  A esa expresión 
	le agrega un "salto de línea"

--------------------------------------------
/*
	Otro ejemplo en Java
*/
class Example2 {
	public static void main(String args[]) {
		int num; // declara una variable entera denominada num

		num = 100; // asigna (almacena) 100 en la variable num

		System.out.println("Esto es num: " + num);

		num = num * 2;

		System.out.print("El valor de num * 2 es ");
		System.out.println(num);
	}
}


--------------------------------------------
Tipos de datos


	00000001           1
	00000000           0
	00000010           2
	00000011           3
	00000100           4
	01111111         127

	10000001				  -1
	11111111        -127

  IEEE-754
  2e2   ----> 200
  2e-2

  PIEDRA
  ASCII 
  1000001   ---> 65   ----> A
  1000010   ---> 66   ----> B
  1100001   ---> 97   ----> a
  ASCII ext
  00000000
  11111111  ---> 255
  UNICODE 


Tipos de datos primitivos
-------------------------------
Numéricos
	Enteros
		byte
		short
		- int
		long
	Decimales
		float
		- double
Caracteres
	'a'
	'Z'
	'\n'			---> Enter - Salto de línea
	'\t'			---> Tabulación

Booleanos
	true
	false

Objetos
--------------------------------
String
Date
Persona

/*
	Tipos de datos
*/
class Practica03 {
	public static void main(String args[]) {
		int a = 2147423432;
		byte b = -128;
		short s = 31000;
		long l = 21474234322345L;			// El sufijo L permite manejar
																	// literales enteros-largos

		float f = 3.1416F;						// El sufijo F permite manejar
																	// literales de tipo float
		double d = 3.0000000000000000000001;

		char c = 'F' + 32;

		boolean bb = 10 > 100;

		System.out.println("Entero: " + a);
		System.out.println("Byte: " + b);
		System.out.println("Short: " + s);
		System.out.println("Long: " + l);


		System.out.println("Float: " + f);
		System.out.println("Double: " + d);


		System.out.println('8' - '0');

		System.out.println(bb);
	}
}

--------------------------------------------
Algunos errores de compilación

/*
	Otro ejemplo en Java
*/
class Example2 {
	public static void main(String args[]) {
		int num; // declara una variable entera denominada num

		num = 100; // asigna (almacena) 100 en la variable num

		System.out.println("Esto es num: " + num);

		num = num * 2;

		System.out.print("El valor de num * 2 es ");
		System.out.println(num);
	}
}

--------------------------------------------
/*
	Declaraciones, asignaciones e inicializaciones
	algunos ejemplos prácticos
*/
class Ejemplo{
	public static void main(String[] args){
		int a;					// declara una variable entera
		int b;					// declara una variable entera

		String mensaje = "Fin del programa!";
		
		a = 1;					// asignación
		System.out.println(a);	// Salida

		b = 2;
		System.out.println(b);

		int c;
		c = a + b;
		System.out.println(c);

		int d = 10;			// declaración e inicialización
		System.out.println("d: " + d);// Expresión String + int

		System.out.println(a + b + c);// Expresión con 3 int

		System.out.println(mensaje);
	}
}




--------------------------------------------
int a, b, c;
int a, b = 10, c = 0;

--------------------------------------------
Tipos de datos: int y double
	int a = 175;
	double b = 3.1416;

--------------------------------------------
/*
	Diferencias entre 
	int y double
*/
class Ejemplo{
	public static void main(String[] args){
		int a;
		double x;

		a = 10;
		x = 10.0;

		System.out.println("Valor original de a: " + a);
		System.out.println("Valor original de x: " + x);

		// división por 3
		a = a / 3;
		x = x / 3;

		System.out.println("Valor de a luego de la división por 3: " + a);
		System.out.println("Valor de x luego de la división por 3: " + x);
	}
}

--------------------------------------------
/*
	Práctica:
	intercambio de valores entre dos variables
*/

class Ejemplo{
	public static void main(String[] args){
		int a = 10;
		int b = 20;

		System.out.println("Valor inicial de a: " + a);
		System.out.println("Valor inicial de b: " + b);

		// --------------------
		int c;

		c = a;
		a = b;
		b = c;

		// --------------------

		System.out.println("Valor final de a: " + a);
		System.out.println("Valor final de b: " + b);
	}
}

--------------------------------------------
/*
	Ejemplo
	Introducción a las estructuras de control
	if(expresión_lógica)
*/
class Ejemplo{
	public static void main(String[] args){
		int a = 10;
		int b = 20;

		if(a < b) System.out.println("a es menor que b!");

		a = a * 2;
		if(a == b) System.out.println("a, ahora, es igual a b!");

		a = a * 2;
		if(a > b) System.out.println("a, ahora, es mayor que b!");

		a = a * 2;
		if(a == b) System.out.println("Esto no se imprime!");
	}
}

/*
	Ejemplo
	Introducción a las estructuras de control
	if(expresión_lógica)
*/
class Ejemplo{
	public static void main(String[] args){
		int a = 1;
		int b = 10;

		System.out.println("Valor de a: " + a);
		System.out.println("Valor de b: " + b);

		if(a < b)
			System.out.println("a es menor que b");

		if(a == b)
			System.out.println("a y b son iguales");

		if(a != b)
			System.out.println("a y b son distintos");

	}
}

--------------------------------------------
/*
	Ejemplo
	Introducción a las estructuras de control
	if(expresión_lógica)
*/
class Ejemplo{
	public static void main(String[] args){
		int a = 1;
		int b = 10;

		System.out.println("Valor de a: " + a);
		System.out.println("Valor de b: " + b);

		// --------------------------------------
		int c = b - a;

		if(a > b)
			c = a - b;

		// --------------------------------------
		System.out.println("La diferencia entre ambos valores es: " + c);
	}
}

--------------------------------------------
/*
	Operadores relacionales
*/

import java.util.Scanner;

class Ejemplo{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
			/*
				System.in es un elemento de la clase System que
					representa la entrada estándar
				System.out es un elemento de la clase System que
					representa la salida estándar
			*/

		System.out.print("Como te llamas: ");
		String nombre = sc.next();	// next() permite leer un texto
																// desde el teclado

		System.out.print("Ingrese un número: ");
		int a = sc.nextInt();			// nextInt() permite leer un entero 
															// desde el teclado
		System.out.print("Ingrese otro número: ");
		int b = sc.nextInt();

		System.out.println("a == b: " + (a == b));
		System.out.println("a != b: " + (a != b));
		System.out.println("a < b:  " + (a < b));
		System.out.println("a <= b: " + (a <= b));
		System.out.println("a > b:  " + (a > b));
		System.out.println("a >= b: " + (a >= b));
	}
}

--------------------------------------------
/*
	Práctica
	Uso de Scanner

	Scanner es una clase que define objetos que se 
	pueden ser usados para leer datos desde una 
	entrada (por ejemplo: un archivo de texto o
	la entrada del sistema).
*/

// Importar la clase Scanner ubicada en el 
// paquete java.util
import java.util.Scanner;

class Ejemplo{
	public static void main(String[] args){
		// Declarar una variable de tipo Scanner
		Scanner sc;

		// Inicializar el Scanner indicando desde donde
		// leerá los datos (System.in es la entrada estándar)
		sc = new Scanner(System.in);

		System.out.print("Ingrese un entero: ");
		int n = sc.nextInt();

		System.out.print("Ingrese una palabra: ");
		/* 
			Asignar en una variable los datos leidos con el 
		 	objeto Scanner
		 		Si se quiere leer un String sin espacios se usa el método next()
		 		Si se quiere leer un int se usa el método nextInt()
		 		Si se quiere leer un double se usa el método nextDouble()
		*/
		String palabra = sc.next();


		System.out.println("La palabra es: " + palabra);
		System.out.println("El entero es: " + n);
	}

}

--------------------------------------------
/* 
	Ejemplo de if .. else
*/
class Ejemplo{
	public static void main(String[] args){
		
		int a = 10;
		int b = 50;

		if(a > b)
			System.out.println("Mayor es a");
		else
			System.out.println("b es mayor o igual");
	}
}
--------------------------------------------
/* 
	Ejemplo de if .. else
	Práctica:
	Indicar cual es el mayor de dos números
	leídos desde el teclado
*/

import java.util.Scanner;

class Ejemplo{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int a;
		int b;

		System.out.println("Ingrese dos números:");
		System.out.print("a: ");
		a = sc.nextInt();
		System.out.print("b: ");
		b = sc.nextInt();

		if(a > b)
			System.out.println("Mayor es a");
		else
			System.out.println("b es mayor o igual");
	}
}

--------------------------------------------
/*
	Ejemplo de if..else anidados
	el mayor de tres números distintos
*/
class Ejemplo{
	public static void main(String[] args){
		int a = 10, 
				b = 6, 
				c = 8;

		if(a > b)
			if(a > c)
				System.out.println("Mayor: " + a);
			else
				System.out.println("Mayor: " + c);
		else
			if(b > c)
				System.out.println("Mayor: " + b);
			else
				System.out.println("Mayor: " + c);
	}
}

--------------------------------------------
Operador
	++
	--

--------------------------------------------
/*
	Bucle for
*/
class Ejemplo{
	public static void main(String[] args){
		int i;

		for(i=0; i<10; i++)
			System.out.println("Ciclo: " + i);
		
	}
}

--------------------------------------------
/*
	Bloques de código
*/
class Ejemplo{
	public static void main(String[] args){
		for(int i=0; i<5; i++){
			System.out.println(i + " al cuadrado es " + i * i);
			System.out.println(i + " por 2 es " + 2 * i);
			System.out.println(i + " por 3 es " + 3 * i);
		}
	}
}

--------------------------------------------
/*
	Sentencias que ocupan varias líneas
*/
class Ejemplo{
	public static void main(String[] args){
		System.out.println("Una sentencia se puede escribir " +
					"en varias líneas.   No se puede separar una " +
					"cadena de texto en varias líneas, salvo " +
					"dividiéndola en subcadenas y sumándolas unas " +
					"con otras");
	}
}

--------------------------------------------
/* 
	Usos de la indentación
*/
class Ejemplo{
	public static void main(String[] args){
		int a = 2, b = 1;

		System.out.println("Ordenar dos números diferentes");
		if(a < b)
			System.out.println(a + " - " + b);
		else
			System.out.println(b + " - " + a);
	}
}

--------------------------------------------
Palabras reservadas de java
	abstract	
	assert
	boolean
	break
	byte
	case
	catch
	char
	class
	const
	continue
	default
	do
	double
	else
	enum
	extends
	final
	finally
	float
	for
	goto
	if
	implements
	import
	instanceof
	int
	interface
	long
	native
	new
	package
	private
	protected
	public
	return
	short
	static
	strictfp
	super
	switch
	synchronized
	this
	throw
	throws
	transient
	try
	void
	volatile
	while

--------------------------------------------
Identificadores
	CamelCase
	inicio
	Simbolos
